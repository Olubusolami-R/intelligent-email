{"ast":null,"code":"import _defineProperty from \"/Users/olubusolamisogunle/Documents/GitHub/quiz-app-project/frontend/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nimport _classCallCheck from \"/Users/olubusolamisogunle/Documents/GitHub/quiz-app-project/frontend/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/olubusolamisogunle/Documents/GitHub/quiz-app-project/frontend/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/olubusolamisogunle/Documents/GitHub/quiz-app-project/frontend/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/olubusolamisogunle/Documents/GitHub/quiz-app-project/frontend/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/olubusolamisogunle/Documents/GitHub/quiz-app-project/frontend/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/olubusolamisogunle/Documents/GitHub/quiz-app-project/frontend/src/components/FormView.js\";\nimport React, { Component } from 'react';\nimport $ from 'jquery';\nimport '../stylesheets/FormView.css';\n\nvar FormView =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(FormView, _Component);\n\n  function FormView(props) {\n    var _this;\n\n    _classCallCheck(this, FormView);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(FormView).call(this));\n\n    _this.submitQuestion = function (event) {\n      event.preventDefault();\n      $.ajax({\n        url: '/questions',\n        //TODO: update request URL\n        type: 'POST',\n        dataType: 'json',\n        contentType: 'application/json',\n        data: JSON.stringify({\n          question: _this.state.question,\n          answer: _this.state.answer,\n          difficulty: _this.state.difficulty,\n          category: _this.state.category\n        }),\n        xhrFields: {\n          withCredentials: true\n        },\n        crossDomain: true,\n        success: function success(result) {\n          document.getElementById('add-question-form').reset();\n          return;\n        },\n        error: function error(_error) {\n          alert('Unable to add question. Please try your request again');\n          return;\n        }\n      });\n    };\n\n    _this.handleChange = function (event) {\n      _this.setState(_defineProperty({}, event.target.name, event.target.value));\n    };\n\n    _this.state = {\n      question: '',\n      answer: '',\n      difficulty: 1,\n      category: 1,\n      categories: {}\n    };\n    return _this;\n  }\n\n  _createClass(FormView, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var _this2 = this;\n\n      $.ajax({\n        url: \"/categories\",\n        //TODO: update request URL\n        type: 'GET',\n        success: function success(result) {\n          _this2.setState({\n            categories: result.categories\n          });\n\n          return;\n        },\n        error: function error(_error2) {\n          alert('Unable to load categories. Please try your request again');\n          return;\n        }\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this3 = this;\n\n      return React.createElement(\"div\", {\n        id: \"add-form\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 66\n        },\n        __self: this\n      }, React.createElement(\"h2\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 67\n        },\n        __self: this\n      }, \"Add a New Trivia Question\"), React.createElement(\"form\", {\n        className: \"form-view\",\n        id: \"add-question-form\",\n        onSubmit: this.submitQuestion,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 68\n        },\n        __self: this\n      }, React.createElement(\"label\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 73\n        },\n        __self: this\n      }, \"Question\", React.createElement(\"input\", {\n        type: \"text\",\n        name: \"question\",\n        onChange: this.handleChange,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 75\n        },\n        __self: this\n      })), React.createElement(\"label\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 77\n        },\n        __self: this\n      }, \"Answer\", React.createElement(\"input\", {\n        type: \"text\",\n        name: \"answer\",\n        onChange: this.handleChange,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 79\n        },\n        __self: this\n      })), React.createElement(\"label\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 81\n        },\n        __self: this\n      }, \"Difficulty\", React.createElement(\"select\", {\n        name: \"difficulty\",\n        onChange: this.handleChange,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 83\n        },\n        __self: this\n      }, React.createElement(\"option\", {\n        value: \"1\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 84\n        },\n        __self: this\n      }, \"1\"), React.createElement(\"option\", {\n        value: \"2\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 85\n        },\n        __self: this\n      }, \"2\"), React.createElement(\"option\", {\n        value: \"3\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 86\n        },\n        __self: this\n      }, \"3\"), React.createElement(\"option\", {\n        value: \"4\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 87\n        },\n        __self: this\n      }, \"4\"), React.createElement(\"option\", {\n        value: \"5\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 88\n        },\n        __self: this\n      }, \"5\"))), React.createElement(\"label\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 91\n        },\n        __self: this\n      }, \"Category\", React.createElement(\"select\", {\n        name: \"category\",\n        onChange: this.handleChange,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 93\n        },\n        __self: this\n      }, Object.keys(this.state.categories).map(function (id) {\n        return React.createElement(\"option\", {\n          key: id,\n          value: id,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 96\n          },\n          __self: this\n        }, _this3.state.categories[id]);\n      }))), React.createElement(\"input\", {\n        type: \"submit\",\n        className: \"button\",\n        value: \"Submit\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 103\n        },\n        __self: this\n      })));\n    }\n  }]);\n\n  return FormView;\n}(Component);\n\nexport default FormView;","map":{"version":3,"sources":["/Users/olubusolamisogunle/Documents/GitHub/quiz-app-project/frontend/src/components/FormView.js"],"names":["React","Component","$","FormView","props","submitQuestion","event","preventDefault","ajax","url","type","dataType","contentType","data","JSON","stringify","question","state","answer","difficulty","category","xhrFields","withCredentials","crossDomain","success","result","document","getElementById","reset","error","alert","handleChange","setState","target","name","value","categories","Object","keys","map","id"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport $ from 'jquery';\nimport '../stylesheets/FormView.css';\n\nclass FormView extends Component {\n  constructor(props) {\n    super();\n    this.state = {\n      question: '',\n      answer: '',\n      difficulty: 1,\n      category: 1,\n      categories: {},\n    };\n  }\n\n  componentDidMount() {\n    $.ajax({\n      url: `/categories`, //TODO: update request URL\n      type: 'GET',\n      success: (result) => {\n        this.setState({ categories: result.categories });\n        return;\n      },\n      error: (error) => {\n        alert('Unable to load categories. Please try your request again');\n        return;\n      },\n    });\n  }\n\n  submitQuestion = (event) => {\n    event.preventDefault();\n    $.ajax({\n      url: '/questions', //TODO: update request URL\n      type: 'POST',\n      dataType: 'json',\n      contentType: 'application/json',\n      data: JSON.stringify({\n        question: this.state.question,\n        answer: this.state.answer,\n        difficulty: this.state.difficulty,\n        category: this.state.category,\n      }),\n      xhrFields: {\n        withCredentials: true,\n      },\n      crossDomain: true,\n      success: (result) => {\n        document.getElementById('add-question-form').reset();\n        return;\n      },\n      error: (error) => {\n        alert('Unable to add question. Please try your request again');\n        return;\n      },\n    });\n  };\n\n  handleChange = (event) => {\n    this.setState({ [event.target.name]: event.target.value });\n  };\n\n  render() {\n    return (\n      <div id='add-form'>\n        <h2>Add a New Trivia Question</h2>\n        <form\n          className='form-view'\n          id='add-question-form'\n          onSubmit={this.submitQuestion}\n        >\n          <label>\n            Question\n            <input type='text' name='question' onChange={this.handleChange} />\n          </label>\n          <label>\n            Answer\n            <input type='text' name='answer' onChange={this.handleChange} />\n          </label>\n          <label>\n            Difficulty\n            <select name='difficulty' onChange={this.handleChange}>\n              <option value='1'>1</option>\n              <option value='2'>2</option>\n              <option value='3'>3</option>\n              <option value='4'>4</option>\n              <option value='5'>5</option>\n            </select>\n          </label>\n          <label>\n            Category\n            <select name='category' onChange={this.handleChange}>\n              {Object.keys(this.state.categories).map((id) => {\n                return (\n                  <option key={id} value={id}>\n                    {this.state.categories[id]}\n                  </option>\n                );\n              })}\n            </select>\n          </label>\n          <input type='submit' className='button' value='Submit' />\n        </form>\n      </div>\n    );\n  }\n}\n\nexport default FormView;\n"]},"metadata":{},"sourceType":"module"}